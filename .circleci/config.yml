version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/

orbs:
  # The python orb contains a set of prepackaged CircleCI configuration you can use repeatedly in your configuration files
  # Orb commands and jobs help you with common scripting around a language/tool
  # so you dont have to copy and paste it everywhere.
  docker: circleci/docker@2.1.3
  python: circleci/python@2.0.3
  heroku: circleci/heroku@1.2.6

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          command: |
            python3 -m venv env 
            source env/bin/activate 
            pip install -r requirements.txt
      - run: 
          command: 
            source env/bin/activate
            pytest

    deploy:
      docker:
        - image: cimg/python:3.10.2
          auth:
            username: e1m2i3l4
            password: $DOCKERHUB_ACCESS_TOKEN
      machine: true
      steps:
        - checkout
        - run:
            name: Build and push Docker image to Heroku
            command: |
              set -x
              sudo curl https://cli-assets.heroku.com/install.sh | sh
              HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
              HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a ${HEROKU_APP_NAME} web --recursive 
              HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a ${HEROKU_APP_NAME} web

workflows:
  build_test_and_deploy:
    jobs:
      - build-and-test
      - hold:
          type: approval
          requires:
            - build-and-test 
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build-and-test
          filters:
            branches:
              only: master